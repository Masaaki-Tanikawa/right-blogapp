.article
  %h1.article_title= @article.title
  .article_detail
    = image_tag 'default-avatar.png'
    %div
      / ユーザー名にdisplay_name:メールアドレスの@以前を表示
      %p= @article.user.display_name
      %p= @article.display_created_at
      / 編集・削除ボタンをログイン時＋自分が書いた記事(記事のIDがログインしているユーザーのArticlesテーブルの中に存在する場合)のみ表示させる
      - if user_signed_in? && current_user.articles.exists?(id: @article.id)
        .article_detail_actions
          .dropdown
            = image_tag 'actions.svg', class: 'dropbtn'
            .dropdown-content.mini
              = link_to '編集する', edit_article_path(@article)
              = link_to '削除する', article_path(@article), data: { turbo_method: 'delete', turbo_confirm: '本当に削除してもよろしいですか？' }
  .article_content
    = @article.content
  .article_heart
    = image_tag 'heart.svg'

-# コメント一覧を表示
.article
  %h2 コメント一覧
  - @comments.each do |comment|
    .article_comment
      %p= comment.content

-# コメント投稿ボタンを実装
.container
  = link_to new_article_comment_path(@article) do
    .btn-secondary
      コメントを追加